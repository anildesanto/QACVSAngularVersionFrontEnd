{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create-user/create-user.component.css","webpack:///./src/app/create-user/create-user.component.html","webpack:///./src/app/create-user/create-user.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/login-check.guard.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/shared/cv-table/cv-table.component.css","webpack:///./src/app/shared/cv-table/cv-table.component.html","webpack:///./src/app/shared/cv-table/cv-table.component.ts","webpack:///./src/app/shared/cv-table/cvs.service.ts","webpack:///./src/app/shared/user-table/user-table.component.css","webpack:///./src/app/shared/user-table/user-table.component.html","webpack:///./src/app/shared/user-table/user-table.component.ts","webpack:///./src/app/shared/user-table/users.service.ts","webpack:///./src/app/side-bar/side-bar.component.css","webpack:///./src/app/side-bar/side-bar.component.html","webpack:///./src/app/side-bar/side-bar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { CreateUserComponent } from './create-user/create-user.component';\nimport { LoginCheckGuard } from './login-check.guard';\n\nconst routes: Routes = [\n\n     \n    {path : \"login\",\n    component: LoginComponent,\n    canActivate : [LoginCheckGuard]\n    },\n    \n    {path : \"dashboard\", \n    component: DashboardComponent,\n    canActivate : [LoginCheckGuard]\n    },\n    {path : \"create\",\n    canActivate : [LoginCheckGuard],\n    component: CreateUserComponent},\n    //  {path : \"update\", component: DashboardComponent},\n    //  {path : \"create\", component: DashboardComponent},\n   {path : \"\", redirectTo: \"login\", canActivate : [LoginCheckGuard], pathMatch: \"full\"},\n    // {path : \"**\", component: CvTableComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n    <!-- <app-dashboard class = \\\"container-fluid col\\\"></app-dashboard> -->\\n    <h1 style = \\\"text-align: center\\\">{{title}}</h1>\\n    <div class = \\\"row\\\"> \\n      <app-side-bar *ngIf = \\\"userService.loggedInUser\\\" id=\\\"sdivde-out\\\" class=\\\"side-nav fixed\\\" [profilePicUrl] = \\\"userService.generateImgUrl(userService.loggedInUser.userId)\\\"></app-side-bar>\\n      <div class = \\\"col\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n\"","import { Component } from '@angular/core';\nimport { UserService } from './shared/user-table/users.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private userService : UserService){}\n  title = 'Qacvs Angular Version';\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CvTableComponent } from './shared/cv-table/cv-table.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserTableComponent } from './shared/user-table/user-table.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SideBarComponent } from './side-bar/side-bar.component';\nimport { LoginComponent } from './login/login.component';\nimport { CreateUserComponent } from './create-user/create-user.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CvTableComponent,\n    UserTableComponent,\n    DashboardComponent,\n    SideBarComponent,\n    LoginComponent,\n    CreateUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS11c2VyL2NyZWF0ZS11c2VyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\n    <div class=\\\"card card-register mx-auto mt-5\\\">\\n      <div class=\\\"card-header\\\">Create User</div>\\n      <div class=\\\"card-body\\\">\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-label-group\\\">\\n                  <input type=\\\"text\\\" id=\\\"firstName\\\" class=\\\"form-control\\\" placeholder=\\\"First name\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\">\\n                  <label for=\\\"firstName\\\">First name</label>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-label-group\\\">\\n                  <input type=\\\"text\\\" id=\\\"lastName\\\" class=\\\"form-control\\\" placeholder=\\\"Last name\\\" required=\\\"required\\\">\\n                  <label for=\\\"lastName\\\">Last name</label>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"form-label-group\\\">\\n              <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\" required=\\\"required\\\">\\n              <label for=\\\"inputEmail\\\">Email address</label>\\n            </div>\\n          </div>\\n          <a class=\\\"btn btn-primary btn-block\\\" href=\\\"login.html\\\">Register</a>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\nexport class CreateUserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\n  <div class=\\\"cards mx-auto mt-5\\\">\\n    <div class=\\\"card-header\\\"> <h2>{{pageTitle}}</h2></div>\\n    <div class=\\\"card-body\\\">\\n      <h5>Logged in as {{loggedInUser.firstName}}</h5>\\n        <app-user-table *ngIf = \\\"this.loggedInUser.department.departmentId !== 1 && this.loggedInUser.department.departmentId !== 1\\\" (load) = \\\"updateCvTable($event)\\\" [loggedInUserDepartment] = \\\"loggedInUser.department.departmentId\\\"></app-user-table>\\n        <app-cv-table [userId] = \\\"userToSearch\\\" [userName] = \\\"userName\\\"></app-cv-table>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { IUser } from 'src/app/shared/user-table/user';\nimport { UserService } from 'src/app/shared/user-table/users.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  pageTitle : string = \"Dashboard\";\n  userName : string;\n  userToSearch : number;\n  constructor(private userService : UserService){\n   \n  }\n  loggedInUser : IUser;\n\n  // get userToSearch() : number\n  // {\n  //   return this.toSearch;\n  // }\n  // set userToSearch(value: number)\n  // {\n  //   this.toSearch = value;\n  // }\n\n  ngOnInit() {\n    this.loggedInUser = this.userService.getLoggedInUser();\n    console.log(\"loggedin user:\"+this.loggedInUser);\n    if(this.loggedInUser.department.departmentId !== 1 && this.loggedInUser.department.departmentId !== 1)\n    {\n      this.userName = \"User\";\n    }\n    else\n    {\n      this.userName = this.loggedInUser.firstName;\n      this.userToSearch = this.loggedInUser.userId;\n    }\n\n  }\n  ngOnChanges()\n  {\n    //this.userToSearch++;\n    //this.userName = info[0];\n  }\n  updateCvTable(info : string[])\n  {\n    console.log(\"received: \"+info);\n    const lol = info[0];\n    this.userToSearch = Number(lol);\n    this.userName = info[1];\n    console.log(\"nr: \"+this.userToSearch);\n    //console.log(\"nr: \"+this.toSearch);\n    console.log(\"name: \"+ this.userName)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from 'src/app/shared/user-table/users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginCheckGuard implements CanActivate {\n  constructor(private userService : UserService, private router : Router){\n   \n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      \n      if(!this.userService.loggedInUser && state.url !== \"/login\")\n      {\n        this.router.navigate([\"/login\"]);\n        return false;\n      }\n      else if(this.userService.loggedInUser && state.url === \"/login\")\n      {\n        this.router.navigate([\"/dashboard\"]);\n        return false;\n      }\n      console.log(\"path: \"+state.url);\n      //this.router.navigate([state.url]);\n      return true;\n  }\n \n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"card card-login mx-auto mt-5\\\">\\n      <div class=\\\"card-header\\\">Login</div>\\n      <div class=\\\"card-body\\\">\\n        <form >\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"form-label-group\\\">\\n              <input [(ngModel)] = \\\"email\\\" name = \\\"email\\\"  type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\">\\n              <label for=\\\"inputEmail\\\">Email address</label>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"form-label-group\\\">\\n              <input [(ngModel)] = \\\"password\\\" name = \\\"password\\\"  type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required=\\\"required\\\">\\n              <label for=\\\"inputPassword\\\">Password</label>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"checkbox\\\">\\n              <label>\\n                <input type=\\\"checkbox\\\" value=\\\"remember-me\\\">\\n                Remember Password\\n              </label>\\n            </div>\\n          </div>\\n          <a class=\\\"btn btn-primary btn-block\\\" (click) = \\\" tryLogIn()\\\">Login</a>\\n        </form>\\n        <div class=\\\"text-center\\\">\\n          <a class=\\\"d-block small\\\" href=\\\"forgot-password.html\\\">Forgot Password?</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <div class=\\\"container\\\">\\n      <div class=\\\"card card-login mx-auto mt-5\\\">\\n        <div class=\\\"card-header\\\">Reset Password</div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"text-center mb-4\\\">\\n            <h4>Forgot your password?</h4>\\n            <p>Enter your email address and we will send you instructions on how to reset your password.</p>\\n          </div>\\n          <form>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"form-label-group\\\">\\n                <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" placeholder=\\\"Enter email address\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\">\\n                <label for=\\\"inputEmail\\\">Enter email address</label>\\n              </div>\\n            </div>\\n            <a class=\\\"btn btn-primary btn-block\\\" href=\\\"login.html\\\">Reset Password</a>\\n          </form>\\n          <div class=\\\"text-center\\\">\\n            <a class=\\\"d-block small mt-3\\\" href=\\\"register.html\\\">Register an Account</a>\\n            <a class=\\\"d-block small\\\" href=\\\"login.html\\\">Login Page</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MD5} from \"crypto-js\";\nimport { UserService } from '../shared/user-table/users.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email : string;\n  password : string;\n  constructor(private userService : UserService) { }\n\n  ngOnInit() {\n  \n  }\n  tryLogIn()\n  {\n    const hashedPass = MD5(this.password);\n    this.userService.tryLoggIn(this.email, hashedPass.toString());\n    console.log(\"email: \", this.email);\n    console.log(\"password: \"+hashedPass);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jdi10YWJsZS9jdi10YWJsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n  <div class=\\\"cards mx-auto mt-5\\\">\\n    <div class=\\\"card-header\\\">{{tableTitle}}</div>\\n    <div class=\\\"card-body\\\">\\n    <!-- <input [(ngModel)] = \\\"status\\\" type = \\\"search\\\" /> -->\\n    <select  [(ngModel)] = \\\"status\\\" class=\\\"form-control\\\">\\n        <option value = \\\"\\\" selected>All</option>\\n        <option value = \\\"Gray\\\">Gray</option>\\n        <option value = \\\"Green\\\">Green</option>\\n        <option value = \\\"Red\\\">Red</option>\\n    </select>\\n    <p>Filtering by color: {{status}}</p>\\n    <table  class = \\\"table table-hover table-bordered \\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\n      <thead>\\n        <tr>\\n          <th>Cv Name</th>\\n          <th>Status</th>\\n          <th>Creation Date</th>\\n          <th>User Name</th>\\n          <th>Download</th>\\n          <th>Delete</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf = \\\"cvsList && cvsList.length\\\">\\n        <tr *ngFor = \\\"let cv of filteredCvsList\\\">\\n          <td>{{cv.fileName}}</td>\\n          <td>{{cv.status}}</td>\\n          <td>{{cv.creationDate |date : \\\"medium\\\" }}</td>\\n          <td>{{cv.user.firstName}} {{cv.user.lastName}}</td>\\n          <td><a href = \\\"{{cvsService.cvsUrl}}/{{cv.cvId}}/download\\\" ><img src = \\\"https://image.flaticon.com/icons/svg/138/138601.svg\\\"  style = \\\"width : 25px\\\" /></a></td>\\n          <td><a  (click) = \\\"cvsService.deleteCv(cv.cvId)\\\" ><img src = \\\"https://image.flaticon.com/icons/png/128/138/138767.png\\\"  style = \\\"width : 25px\\\" /></a></td>\\n        </tr >\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { CvsService } from './cvs.service';\nimport { ICv } from './cv';\nimport { catchError, tap, map } from 'rxjs/operators';``\n@Component({\n  selector: 'app-cv-table',\n  templateUrl: './cv-table.component.html',\n  styleUrls: ['./cv-table.component.css']\n})\nexport class CvTableComponent implements OnInit {\n\n  constructor(private cvsService : CvsService) { }\n  cvsList : ICv[];\n  filteredCvsList : ICv[];\n  @Input() userId : number;\n  @Input() toLoad : number;\n  @Input() userName : string;\n  tableTitle : string;\n  ngOnChanges() : void\n  {\n    \n    this.load();\n  }\n  ngOnInit() \n  {\n    \n    this.load();\n   \n  }\n  load()\n  {\n    this.tableTitle = `${this.userName}'s Cvs Table`;\n    this.currentStatus = \"All\";\n    this.cvsService.getAllCvs().subscribe((list) => {\n      this.cvsList = list.filter(cv => \n        cv.user.userId === this.userId\n        );//show particular user cv\n    this.filteredCvsList = this.cvsList;\n    });\n  }\n  get userID() : number\n  {\n    return this.userId;\n  }\n  set userID (value : number)\n  {\n    \n    this.userId = value;\n    console.log(\"userId: \"+this.userId);\n  }\n  currentStatus : string;\n  get status () : string\n  {\n    return this.currentStatus;\n  }\n  set status (value : string)\n  {\n    this.currentStatus = value;\n    this.filteredCvsList = this.filterByStatus(value);\n  }\n  filterByStatus(status:string) : ICv[]\n  {\n    console.log(status);\n    \n    return  this.cvsList.filter((cv) => cv.status.toLowerCase().startsWith(status.toLowerCase()));\n  }\n  ngDoCheck() {\n    if (this.cvsService.reload  === true) \n    {\n      this.load();\n      //this.changeDetector.detectChanges();\n      console.log(\"Reloaded: \"+ this.cvsService.reload);\n      this.cvsService.reload = false;\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { ICv } from './cv';\r\n@Injectable\r\n({\r\n    providedIn : \"root\"\r\n})\r\nexport class CvsService\r\n{\r\n    cvsUrl : string = \"https://qacvmanager.azurewebsites.net/api/cv\";\r\n    reload :  boolean = false;\r\n    constructor(private httpClient : HttpClient){}\r\n    getAllCvs() : Observable<ICv[]>\r\n    {\r\n        return this.httpClient.get<ICv[]>(this.cvsUrl);\r\n    }\r\n    deleteCv(cvId : string) : void\r\n    {\r\n        console.log(\"deleting\");\r\n        this.httpClient.get(`${this.cvsUrl}/${cvId}/delete`).toPromise()\r\n        .then(() => {console.log(\"deleted!\"); this.reload = true;});\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC91c2VyLXRhYmxlL3VzZXItdGFibGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- *ngIf = \\\"userList && filteredList.length\\\" -->\\n    <div class=\\\"card mx-auto mt-5\\\">\\n      <div class=\\\"card-header\\\">{{tableTitle}}</div>\\n      <div class=\\\"card-body\\\">\\n    <input [(ngModel)] = \\\"filterString\\\" type = \\\"search\\\" placeholder=\\\"Search by name, email or role\\\" class=\\\"form-control\\\"/>\\n    <p>Filtering by: {{filterString}}</p>\\n      <table  class = \\\"table table-hover table-bordered \\\"cellspacing=\\\"0\\\" width=\\\"100%\\\">\\n        <thead>\\n          <tr>\\n            <th class=\\\"th-sm\\\">Picture\\n                <i class=\\\"fa fa-sort float-right\\\" ></i>\\n            </th>\\n            <th class=\\\"th-sm\\\">Name\\n                <i class=\\\"fa fa-sort float-right\\\" ></i>\\n            </th>\\n            <th class=\\\"th-sm\\\">Email\\n                <i class=\\\"fa fa-sort float-right\\\" ></i>\\n            </th>\\n            <th class=\\\"th-sm\\\">Role\\n                <i class=\\\"fa fa-sort float-right\\\" ></i>\\n            </th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor = \\\"let user of filteredList\\\" (click) = \\\"loadCvs(user.userId, user.firstName)\\\">\\n            <td><img [id] = \\\"user.userId\\\" [src] = \\\"userService.generateImgUrl(user.userId)\\\" style = \\\"width : 60px\\\" (error) = userService.defaultImage(user.userId)/></td>\\n            <td>{{user.firstName}} {{user.lastName}}</td>\\n            <td>{{user.email}}</td>\\n            <td>{{user.department.role}}</td>\\n          </tr >\\n        </tbody>\\n      </table>\\n      </div>\\n    </div>\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { IUser } from './user';\nimport { UserService } from './users.service';\n@Component({\n  selector: 'app-user-table',\n  templateUrl: './user-table.component.html',\n  styleUrls: ['./user-table.component.css']\n})\nexport class UserTableComponent implements OnInit {\n  tableTitle : string = \"User's Table\";\n  constructor(private userService : UserService) { }\n  filter : string;\n  userList : IUser[];\n  filteredList : IUser[];\n  info : string[] = [];\n  @Input() loggedInUserDepartment : number;\n  @Output() load : EventEmitter<string[]> = new EventEmitter<string[]>();\n  set filterString(value : string)\n  {\n    const newValue = value.trim().split(\" \");\n    const first = newValue.shift();\n    const second = newValue.join(\"\");\n    this.filter = value.trim();\n    if(value.trim() === \"\")\n    this.filteredList = this.userList;\n    else\n    this.userService.findUsers(first,second).subscribe(list =>  this.filteredList = list);\n  }\n  get filterString () : string\n  {\n    return this.filter;\n  }\n  ngOnInit() {\n    //if(this.loggedInUserDepartment !== 1 && this.loggedInUserDepartment !== 6)\n      this.userService.findUsers(\"\",\"\").subscribe(list =>\n        {\n          this.userList = list;\n          this.filteredList = this.userList;\n        }\n        );\n  }\n  loadCvs(userId : string, userName : string)\n  {\n    this.info.push(userId, userName);\n    console.log(\"emmiting...\"+this.info)\n    this.load.emit(this.info);\n    this.info.length = 0;\n  }\n  \n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { IUser } from \"./user\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport { Element } from \"@angular/compiler/src/render3/r3_ast\";\r\nimport { Router } from \"@angular/router\";\r\n@Injectable\r\n(\r\n    {providedIn : \"root\"}\r\n)\r\nexport class UserService\r\n{\r\n    loggedInUser : IUser ;\r\n      getLoggedInUser() : IUser\r\n      {\r\n          return this.loggedInUser;\r\n      }\r\n    returnedImg : Object;\r\n    constructor(private userRequest : HttpClient, private router: Router)\r\n    {}\r\n    baseUrl : string = \"https://qacvmanager.azurewebsites.net/api/\";\r\n    generateImgUrl(userId : string) : string\r\n    {\r\n        return(`${this.baseUrl}user/${userId}/picture/download`);\r\n    }\r\n    findUsers(value : string, lastName) : Observable <IUser[]>\r\n    {\r\n        return this.userRequest.get<IUser[]>(`${this.baseUrl}findbyname/${value}&${lastName}`);\r\n    }\r\n    defaultImage(imgId : string) : void\r\n    {\r\n        document.getElementById(imgId).setAttribute(\"src\", \"https://image.flaticon.com/icons/svg/149/149071.svg\");\r\n    }\r\n    tryLoggIn(email : string, password : string)\r\n    {\r\n        this.userRequest.get<IUser>(`${this.baseUrl}login/${email}&${password}`)\r\n        .subscribe((user) =>\r\n        {\r\n            if(user)\r\n            {\r\n                this.loggedInUser = user[0];\r\n                console.log(\"user loggedin: \"+user[0].firstName);\r\n                console.log(\"try: \"+this.loggedInUser.firstName);\r\n                this.router.navigate([\"/dashboard\"]);\r\n                return true;\r\n            }\r\n            else\r\n            {\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZGUtYmFyL3NpZGUtYmFyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n     <!-- Sidebar -->\\n     <ul class=\\\"sidebar navbar-nav fixed \\\">\\n        <li class=\\\"logo-wrapper waves-divght\\\">\\n            <a  class = \\\"navbar-brand\\\" [routerLink] = \\\"['/dashboard']\\\"><img [src] =\\\"userService.generateImgUrl(userService.loggedInUser.userId)\\\" (error) = userService.defaultImage(userService.loggedInUser.userId) class=\\\"img-fluid flex-center\\\" style = \\\"width: 100px\\\"></a>\\n          </li>\\n        <li class=\\\"nav-item active\\\">\\n          <a class = \\\"btn btn-block\\\" [routerLink] = \\\"['/dashboard']\\\">\\n            <i class=\\\"fas fa-fw fa-tachometer-alt\\\"></i>\\n            <span>Dashboard</span>\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"btn btn-block\\\" [routerLink] = \\\"['/update']\\\">\\n            <i class=\\\"fas fa-fw fa-chart-area\\\"></i>\\n            <span>Update Profile</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf = \\\"this.userService.loggedInUser.department.departmentId !== 1 && this.userService.loggedInUser.department.departmentId !== 1\\\">\\n          <a class=\\\"btn btn-block\\\" [routerLink] = \\\"['/create']\\\">\\n            <i class=\\\"fas fa-fw fa-table\\\"></i>\\n            <span>Create User</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\" >\\n            <a class=\\\"btn btn-block\\\" href = \\\"https://anildesanto.github.io/QACVSAngularVersionFrontEnd/\\\">\\n              <i class=\\\"fas fa-fw fa-table\\\"></i>\\n              <span>Log Out</span></a>\\n          </li>\\n      </ul>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from '../shared/user-table/users.service';\n\n@Component({\n  selector: 'app-side-bar',\n  templateUrl: './side-bar.component.html',\n  styleUrls: ['./side-bar.component.css']\n})\nexport class SideBarComponent implements OnInit {\n @Input() profilePicUrl : string ;\n constructor(private userService : UserService){\n   \n}\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}